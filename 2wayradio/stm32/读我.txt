的README.txt
codec2支持stm32f4
David Rowe Jan 2016

快速开始
==========

Makefile生成在Codec 2开发中使用的几个程序
STM32F4，包括sm1000.bin，SM1000的固件。

1.安装工具链，在Ubuntu 14上是这样的：

   $ sudo apt-get install gcc-arm-none-eabi

$ make（和交叉你的手指）

不太快速启动
=======================

注意：本节需要一些编辑。它处理运行
半主机用于开发系统。

gdb_stdio系统
----------------

stutil包含一个与目标固件通讯的gdb服务器。
stutil已修补，允许“半主机”：stdio请求
目标被重定向到主机PC。所以如果你打电话给printf
目标，它出现在主机PC控制台上。用printf / fread / fwrite
和gdb它使开发裸机就像开发任何
命令行gcc系统。

目标访问文件的根路径是st-util路径
逃离。

入门
---------------

。安装手臂工具链二进制

   $ cd?
   $ wget https://launchpad.net/gcc-arm-embedded/4.7/4.7-2013-q1-update/+download/gcc-arm-none-eabi-4_7-2013q1-20130313-linux.tar.bz2
   $ tar xjf gcc-arm-none-eabi-4_7-2013q1-20130313-linux.tar.bz2

。构建codec2单元测试：

   $ cd codec2_dev / stm32
   在Makefile中：编辑工具链位置的BINPATH变量
                为当前版本的外设编辑PERIPHLIBVER
                 库，目前为V1.3.0
                从all：target删除power_ut.elf目标
   $ make
   在下载外围库后，您将收到一个编译错误：
   #error“请先选择应用程序中使用的目标STM32F4xx设备（在stm32f4xx.h文件中）”
   编辑STM32F4xx_DSP_StdPeriph_Lib_V1.3.0 /库/ CMSIS / Device / ST / STM32F4xx / Include / stm32f4xx.h
   在该文件的顶部，取消注释您的目标的适当的行
   处理器。
   $ make

。构建stlink：

   $ cd?
   $ git clone https://github.com/shenki/stlink.git
   $ cd stlink
   ?/ stlink $ sudo apt-get install libusb-1.0-0-dev libelf-dev automake
   ?/ stlink $ ./autogen.sh
   ?/ stlink $ ./configure
   ?/ stlink $ make

。在stlink目录中放置一个hts1a.raw的副本，然后启动st-util：

   ?/ stlink $ cp?/ codec2-dev / raw / hts1a.raw stm_in.raw
   ?/ stlink $ sudo ./st-util -f /home/david/codec2-dev/stm32/stm32f4_codec2.elf

。在_another_控制台启动gdb：

   $?/ codec2-dev / stm32 $?/ gcc-arm-none-eabi-4_7-2013q1 / bin / arm-none-eabi-gdb stm32f4_codec2.elf

   （gdb）tar ext：4242

   （gdb）加载
   `/home/david/codec2-dev/stm32/fft_test.elf'已经改变了重新读取符号。
    加载部分.isr_vector，大小0x188 lma 0x8000000
    加载部分.text，大小0x1a4b4 lma 0x8000188
    加载部分.data，大小0x28f0 lma 0x801a63c
    起始地址0x800a885，加载大小118572
    传输速率：13 KB /秒，10779字节/写。

。电力循环发现。

。使用ctrl-C停止st-util，然后重新启动st-util

。回到gdb：

    （gdb）tar ext：4242
    正在调试一个程序。杀了它？ （y或n）y
    远程连接关闭
    （gdb）tar ext：4242
    远程调试使用：4242
    reset_Handler（）在lib / startup_stm32f4xx.s：69
    69 movs r1，＃0

   （gdb）c
   继续。

。 gdb将打印各种调试消息和编解码器输出文件
  将被写入?/ stlink。

  ?/ stlink $ play -r 8000 -s -2 stm_out.raw

处理
-------

1.在TIMER_xxxx上分析宏，grep

2.在Makefile中启用DUMP变量转储文件，注意分析
   由于与主机通话的延迟，时间将被这个损坏

3.使用octave / diff_codec比较输出。例：

   octave：> diff_codec（“?/ stlink / ref / hts1a_out_1300.raw”，“?/ stlink / hts1a_out_1300.raw”，“?/ stlink / stm32f4”，“?/ stlink / ref / stm32f4”

疑难杂症
------

使用printf而不是gdb_stdio_printf，常规的stdio函数是
扼杀，所以将链接，只是没有任何事情会发生。

去做
----

 +检查是否需要“CFLAGS：-mlittle-endian -mthumb -mthumb-interwork”
 +双重检查_fini hack是否正常（src / init.c）